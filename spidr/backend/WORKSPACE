# this must be a local repository not http archive
# so we can run ./configure.py before invoking bazel
local_repository(name = "xla", path = "xla")

load("@xla//third_party/py:python_init_rules.bzl", "python_init_rules")
python_init_rules()

load("@xla//third_party/py:python_init_repositories.bzl", "python_init_repositories")
python_init_repositories(requirements = {"3.11": "//:requirements_lock_3_11.txt"})

load("@xla//third_party/py:python_init_toolchains.bzl", "python_init_toolchains")
python_init_toolchains()

load("@xla//:workspace4.bzl", "xla_workspace4")
xla_workspace4()

load("@xla//:workspace3.bzl", "xla_workspace3")
xla_workspace3()

load("@xla//:workspace2.bzl", "xla_workspace2")
xla_workspace2()

load("@xla//:workspace1.bzl", "xla_workspace1")
xla_workspace1()

load("@xla//:workspace0.bzl", "xla_workspace0")
xla_workspace0()

# load("@tsl//third_party/gpus/cuda/hermetic:cuda_json_init_repository.bzl", "cuda_json_init_repository")
# cuda_json_init_repository()
#
# load("@cuda_redist_json//:distributions.bzl", "CUDA_REDISTRIBUTIONS", "CUDNN_REDISTRIBUTIONS")
# load(
#     "@tsl//third_party/gpus/cuda/hermetic:cuda_redist_init_repositories.bzl",
#     "cuda_redist_init_repositories",
#     "cudnn_redist_init_repository",
# )
# cuda_redist_init_repositories(cuda_redistributions = CUDA_REDISTRIBUTIONS)
# cudnn_redist_init_repository(cudnn_redistributions = CUDNN_REDISTRIBUTIONS)
#
# load("@tsl//third_party/gpus/cuda/hermetic:cuda_configure.bzl", "cuda_configure")
# cuda_configure(name = "local_config_cuda")
