# Copyright 2021 Joel Berkeley
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
on:
  pull_request:
    branches: master

env:
  PACK_DIR: /root/.pack

jobs:
  test-unit:
    runs-on: ubuntu-latest
    container: ghcr.io/stefan-hoeck/idris2-pack
    steps:
    - uses: actions/checkout@v3
    - name: Install Bazel
      working-directory: backend
      run: ./build.sh cpu
    - name: Run tests
      run: pack run --no-prompt test.ipkg
      env:
        LD_LIBRARY_PATH: $LD_LIBRARY_PATH:backend/bazel-bin
  readme:
    runs-on: ubuntu-latest
    container: ghcr.io/stefan-hoeck/idris2-pack
    steps:
    - uses: actions/checkout@v3
    - name: Type-check README
      run: pack typecheck --no-prompt readme.ipkg
  tutorials:
    runs-on: ubuntu-latest
    container: ghcr.io/stefan-hoeck/idris2-pack
    steps:
    - uses: actions/checkout@v3
    - name: Type-check tutorials
      run: res=0; for f in tutorials/*.ipkg; do pack typecheck  --no-prompt $f || res=$?; done; $(exit $res)
  c-xla:
    env:
      TAR_PREFIX: c_xla_extension-x86_64-linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Read C XLA version
      run: echo "C_XLA_VERSION=$(cat backend/VERSION)" >> $GITHUB_ENV
    - name: Create C XLA release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: c-xla-${{ env.C_XLA_VERSION }}
        release_name: C XLA release ${{ env.C_XLA_VERSION }}
    - uses: actions/checkout@v3
    - name: Build C XLA lib cpu
      working-directory: backend
      run: |
        ./build.sh cpu
        ./package.sh ${{ env.TAR_PREFIX }}-cpu
        ls
    - name: Upload C XLA lib cpu
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: backend/${{ env.TAR_PREFIX }}-cpu.tar.gz
        asset_name: ${{ env.TAR_PREFIX }}-cpu.tar.gz
        asset_content_type: application/gzip
    - uses: actions/checkout@v3
    - name: Build C XLA lib cuda111
      working-directory: backend
      run: |
        ./build.sh cuda111
        ./package.sh ${{ env.TAR_PREFIX }}-cuda111
        ls
    - name: Upload C XLA lib cuda111
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: backend/${{ env.TAR_PREFIX }}-cuda111.tar.gz
        asset_name: ${{ env.TAR_PREFIX }}-cuda111.tar.gz
        asset_content_type: application/gzip
